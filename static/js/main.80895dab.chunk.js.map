{"version":3,"sources":["img/About.jpg","img/square_me.jpg","components/NavBar.js","components/About.js","components/Academics.js","components/Projects.js","components/BottomNav.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","useStyles","makeStyles","theme","appBar","backgroundColor","isTop","boxShadow","position","transition","options","display","grow","flexGrow","button","marginLeft","spacing","color","titleWrapper","flexDirection","NavBar","_ref","title","_useState","useState","_useState2","Object","slicedToArray","setIsTop","classes","useEffect","document","addEventListener","curIsTop","window","scrollY","react_default","a","createElement","AppBar","className","Toolbar","Typography","variant","Button","component","Link","to","_introWrapper","introWrapper","backgroundImage","concat","Image","minHeight","defineProperty","breakpoints","down","backgroundSize","up","introContent","padding","maxWidth","imgContent","maxHeight","width","paragraph","paddingLeft","eyeCatcher","textAlign","About","Paper","src","myself","alt","Academics","Projects","root","navItem","link","BottomNav","BottomNavigation","value","BottomNavigationAction","label","icon","index_es","size","target","href","library","add","faGithub","faLinkedin","faEnvelope","App","react_router_dom","components_NavBar","react_router","path","exact","components_BottomNav","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.80895dab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/About.85ba4c24.jpg\";","module.exports = __webpack_public_path__ + \"static/media/square_me.88dbf99c.jpg\";","import React, { useEffect, useState } from \"react\";\r\nimport { AppBar, Toolbar, Typography, makeStyles, Button } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appBar: {\r\n    backgroundColor: isTop => isTop ? 'transparent' : \"black\",\r\n    boxShadow: 'none',\r\n    position: \"fixed\",\r\n    transition: \"background-color .5s ease\"\r\n  },\r\n  options: {\r\n    display: \"flex\",\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  button: {\r\n    marginLeft: theme.spacing(2),\r\n    color: \"white\",\r\n  },\r\n  titleWrapper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  }\r\n}))\r\n\r\nconst NavBar = ({title}) => {\r\n  const [isTop, setIsTop] = useState(true);\r\n  const classes = useStyles(isTop);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('scroll', () => {\r\n      const curIsTop = window.scrollY < 100;\r\n      if (isTop !== curIsTop) {\r\n        setIsTop(!isTop);\r\n      }\r\n    })\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <AppBar className={classes.appBar}>\r\n        <Toolbar>\r\n          <div className={classes.titleWrapper}>\r\n            <Typography variant=\"title\" color=\"white\">\r\n              Welcome to\r\n            </Typography>\r\n            <Typography variant=\"h5\" color=\"white\">\r\n              Hanchi's Website\r\n            </Typography>\r\n          </div>\r\n          \r\n          <div className={classes.grow}></div>\r\n          <div className={classes.options}>\r\n            <Button \r\n              className={classes.button}\r\n              component={Link}\r\n              to=\"/\"\r\n            >\r\n              ABOUT\r\n            </Button>\r\n            <Button \r\n              className={classes.button}\r\n              component={Link}\r\n              to=\"/academics/\"\r\n            >\r\n              ACADEMICS\r\n            </Button>\r\n            <Button \r\n              className={classes.button}\r\n              component={Link}\r\n              to=\"/projects/\"\r\n            >\r\n              PROJECTS\r\n            </Button>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NavBar;","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nimport Image from \"../img/About.jpg\";\r\nimport myself from \"../img/square_me.jpg\";\r\nimport { Paper, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  introWrapper: {\r\n    backgroundImage: `url(${Image})`,\r\n    minHeight: \"80vh\",\r\n    [theme.breakpoints.down('md')]: {\r\n      backgroundSize: \"auto 100%\",\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n      backgroundSize: \"100%\",\r\n    },\r\n    \r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundAttachment: \"fixed\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\"\r\n    // position: \"sticky\"\r\n    // paddingBottom: theme.mixins.toolbar.height,\r\n    // marginTop: -theme.mixins.toolbar.height\r\n  },\r\n  introContent: {\r\n    padding: theme.spacing(3),\r\n    maxWidth: \"60%\",\r\n    display: \"flex\"\r\n  },\r\n  imgContent: {\r\n    maxHeight: \"30vh\",\r\n    width: \"auto\",\r\n    // paddingRight: theme.spacing(3)\r\n  },\r\n  paragraph: {\r\n    paddingLeft: theme.spacing(3)\r\n  },\r\n  eyeCatcher: {\r\n    color: \"white\",\r\n    textAlign: \"center\",\r\n    padding: theme.spacing(30)\r\n  }\r\n}))\r\n\r\nconst About = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.introWrapper}>\r\n        <Typography variant=\"h1\" className={classes.eyeCatcher}>\r\n          HEY THERE\r\n          <br/>\r\n          THANK YOU FOR VISITING\r\n        </Typography>\r\n        <Paper className={classes.introContent}>\r\n          <img src={myself} alt=\"this is me\" className={classes.imgContent} />\r\n          <div className={classes.paragraph}>\r\n            Hi! Welcome to my website. I am Tony Hanchi Zhang, a junior studying computer science @ University of Michigan - Ann Arbor. (Go Blue!)\r\n            <br/>\r\n            <br/>\r\n            I have a great passion about working in the computer science field and am currently looking for a software development internship in 2020 summer. My main interests are frontend / fullstack development and infrastructure development.\r\n            <br/>\r\n            <br/>\r\n            I am also interested in doing research that focuses more on the engineering side of the subject. Check out what we built over the past summer under Experience!\r\n            <br/>\r\n            <br/>\r\n            Part of the initiative about building this website is to show those that are interested in hiring me something more than what I presented on my resume; however, the more important thing is I enjoy applying the skills I have learned to creating a website and experimenting with various new things I want to learn about.\r\n            <br/>\r\n            <br/>\r\n            This is still under construction, but have fun exploring!\r\n            \r\n          </div>\r\n        </Paper>\r\n      </div>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\n\r\nconst Academics = () => {\r\n  return (\r\n    <div>Academics</div>\r\n  )\r\n}\r\n\r\nexport default Academics;","import React from \"react\";\r\n\r\nconst Projects = () => {\r\n  return (\r\n    <div>Projects</div>\r\n  )\r\n}\r\n\r\nexport default Projects;","import React, { useRef } from \"react\";\r\nimport { BottomNavigation, BottomNavigationAction, makeStyles } from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  navItem: {\r\n    width: \"30%\"\r\n  },\r\n  link: {\r\n    \r\n  }\r\n}))\r\n\r\nconst BottomNav = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <BottomNavigation\r\n        value={null}\r\n        className={classes.root}\r\n      >\r\n        <BottomNavigationAction \r\n          label=\"Github\" \r\n          value=\"github\" \r\n          icon={<FontAwesomeIcon icon={['fab', 'github']} size=\"2x\" />} \r\n          className={classes.navItem} \r\n          target=\"_blank\" \r\n          href=\"https://github.com/tonyzhc\" \r\n        />\r\n        <BottomNavigationAction \r\n          label=\"Linkedin\" \r\n          value=\"linkedin\" \r\n          icon={<FontAwesomeIcon icon={['fab', 'linkedin']} size=\"2x\" />} \r\n          className={classes.navItem} \r\n          target=\"_blank\"\r\n          href=\"https://www.linkedin.com/in/tonyhanchizhang/\"\r\n        />\r\n        <BottomNavigationAction \r\n          label=\"Contacts\" \r\n          value=\"contacts\" \r\n          icon={<FontAwesomeIcon icon={['fas', 'envelope']} size=\"2x\" />} \r\n          className={classes.navItem}\r\n        />\r\n      </BottomNavigation>\r\n      {/* <p>powered by React</p> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BottomNav;","import React from 'react';\r\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nimport NavBar from './components/NavBar';\r\nimport About from './components/About';\r\nimport Academics from './components/Academics';\r\nimport Projects from './components/Projects';\r\nimport BottomNav from './components/BottomNav';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faGithub, faLinkedin } from '@fortawesome/free-brands-svg-icons';\r\nimport { faEnvelope } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nlibrary.add(faGithub, faLinkedin, faEnvelope); \r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Router>\r\n      <NavBar/>\r\n\r\n      <Route path=\"/\" exact component={About}></Route>\r\n      <Route path=\"/academics/\" component={Academics}></Route>\r\n      <Route path=\"/projects/\" component={Projects}></Route>\r\n\r\n      <BottomNav />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}